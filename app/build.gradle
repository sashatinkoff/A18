apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

apply from: '../tasks.gradle'

def versionPropsFile = file('version.properties')
android {
    compileSdkVersion versions.compileSdk

    dataBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.isidroid.a18"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        def versionMajor = 1
        def versionMinor = 0
        def versionPatch = 0
        def versionBuild = 0

        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger()
        }

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", applicationId + "." + versionName)
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("ISIDROID_KEYSTORE"))
            storePassword System.getenv("ISIDROID_KEYSTORE_PASSWORD") ?: 'UNSET'
            keyAlias System.getenv("ISIDROID_KEY_ALIAS") ?: 'UNSET'
            keyPassword System.getenv("ISIDROID_KEY_PASSWORD") ?: 'UNSET'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries = true
        incremental true
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin"

    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso_core}"
// google
    implementation "androidx.core:core-ktx:${versions.corektx}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinx_coroutines}"
    implementation "androidx.appcompat:appcompat:${versions.androidx}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraint}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swipe_refresh}"
    implementation "android.arch.work:work-runtime:${versions.worker}"
    implementation "androidx.preference:preference-ktx:${versions.preferences}"
    implementation "androidx.room:room-runtime:${versions.room}"
    implementation "androidx.room:room-ktx:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"

// CameraX core library using the camera2 implementation
    implementation "androidx.camera:camera-camera2:${versions.camerax}"
    implementation "androidx.camera:camera-view:${versions.camerax_view}"
    implementation "androidx.camera:camera-extensions:${versions.camerax_view}"
    implementation "androidx.camera:camera-lifecycle:${versions.camerax}"


// firebase / google gcm
    implementation "com.google.android.gms:play-services-location:${versions.playServicesLocation}"
    implementation "com.google.firebase:firebase-core:${versions.playServicesVersion}"
    implementation "com.google.firebase:firebase-ml-vision:${versions.firebaseMLVision}"
    implementation "com.google.firebase:firebase-messaging:${versions.firebase_messages}"
    implementation "com.google.firebase:firebase-analytics:${versions.analytics}"
    implementation "com.google.firebase:firebase-crashlytics:${versions.crashlytics}"


// Firebase Authentication
    implementation "com.google.firebase:firebase-auth:${versions.firebase_auth}"
    // Google Sign In SDK (only required for Google Sign In)
    implementation "com.google.android.gms:play-services-auth:${versions.play_service_auth}"
    // Firebase UI
    // Used in FirebaseUIActivity.
    implementation "com.firebaseui:firebase-ui-auth:${versions.firebase_ui_auth}"
    // Facebook Android SDK (only required for Facebook Login)
    // Used in FacebookLoginActivity.
    implementation "com.facebook.android:facebook-login:${versions.facebook_login}"
    implementation "androidx.browser:browser:${versions.androidx_browser}"
    implementation "com.facebook.android:facebook-login:${versions.facebook_login}"
// livedata
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime:${versions.lifecycle}"
    kapt "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}"
// network
    implementation "com.squareup.okio:okio:${versions.okio}"
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging}"
// Stuff
    implementation("com.github.bumptech.glide:glide:${versions.glide}") {
        exclude group: "com.android.support"
    }
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    implementation "com.google.code.gson:gson:${versions.gson}"
    implementation "com.github.chrisbanes:PhotoView:${versions.photoview}"
// cores
    implementation project(':utils')
    implementation project(':logger')
    implementation project(':realm')
    implementation project(':pics')
    implementation project(':runtimepermissions')

    // include modules as aars
//    implementation(name: "logger.${versions.isidroid}", ext: 'aar')
//    implementation(name: "utils.${versions.isidroid}", ext: 'aar')
//    implementation(name: "realm.${versions.isidroid}", ext: 'aar')
//    implementation(name: "pics.${versions.isidroid}", ext: 'aar')
//    implementation(name: "runtimepermissions.${versions.isidroid}", ext: 'aar')
}


